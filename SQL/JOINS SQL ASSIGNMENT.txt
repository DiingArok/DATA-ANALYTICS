AKOL JOINS SQL ASSIGNMENT
-- Creating the customers table
CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(100)
);

-- Creating the orders table
CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)
);
SELECT 
    c.customer_id,
    c.name,
    COUNT(o.order_id) AS number_of_orders
FROM 
    Customers c
LEFT JOIN 
    Orders o ON c.customer_id = o.customer_id
GROUP BY 
    c.customer_id, c.name;
SELECT 
    c.customer_id,
    c.name
FROM 
    Customers c
LEFT JOIN 
    Orders o ON c.customer_id = o.customer_id
WHERE 
    o.order_id IS NULL;
CREATE TABLE CustomerOrderCounts AS
SELECT 
    c.customer_id,
    c.name,
    COUNT(o.order_id) AS number_of_orders
FROM 
    Customers c
LEFT JOIN 
    Orders o ON c.customer_id = o.customer_id
GROUP BY 
    c.customer_id, c.name;
CREATE TABLE CustomersWithNoOrders AS
SELECT 
    c.customer_id,
    c.name
FROM 
    Customers c
LEFT JOIN 
    Orders o ON c.customer_id = o.customer_id
WHERE 
    o.order_id IS NULL;
CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(100)
);

CREATE TABLE Orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    amount DECIMAL(10, 2)
);
SELECT o.*
FROM Orders o
LEFT JOIN Customers c ON o.customer_id = c.customer_id
WHERE c.customer_id IS NULL;
CREATE TABLE UnknownCustomerOrders AS
SELECT o.*
FROM Orders o
LEFT JOIN Customers c ON o.customer_id = c.customer_id
WHERE c.customer_id IS NULL;
CREATE TABLE Purchases (
    PurchaseID INT PRIMARY KEY,
    CustomerID INT,
    PurchaseAmount DECIMAL(10, 2),
    PurchaseDate DATE
);
INSERT INTO Purchases (PurchaseID, CustomerID, PurchaseAmount, PurchaseDate) VALUES
(1, 101, 150.50, '2025-01-01'),
(2, 102, 200.00, '2025-01-02'),
(3, 101, 99.99,  '2025-02-01'),
(4, 103, 250.00, '2025-02-10'),
(5, 102, 75.25,  '2025-03-15');
SELECT 
    CustomerID,
    SUM(PurchaseAmount) AS TotalSpent
FROM 
    Purchases
GROUP BY 
    CustomerID;
-- Create Customers table
CREATE TABLE Customers (
    CustomerID INT PRIMARY KEY,
    CustomerName VARCHAR(100)
);

-- Create Orders table
CREATE TABLE Orders (
    OrderID INT PRIMARY KEY,
    CustomerID INT,
    OrderDate DATE,
    FOREIGN KEY (CustomerID) REFERENCES Customers(CustomerID)
);
-- Insert sample customers
INSERT INTO Customers (CustomerID, CustomerName) VALUES
(1, 'Alice'),
(2, 'Bob'),
(3, 'Charlie');

-- Insert sample orders
INSERT INTO Orders (OrderID, CustomerID, OrderDate) VALUES
(101, 1, '2023-01-10'),
(102, 2, '2023-01-15'),
(103, 4, '2023-01-20');  -- Note: CustomerID 4 doesn't exist in Customers
-- Use FULL OUTER JOIN to get all customers and all orders
SELECT 
    Customers.CustomerID,
    Customers.CustomerName,
    Orders.OrderID,
    Orders.OrderDate
FROM Customers
FULL OUTER JOIN Orders ON Customers.CustomerID = Orders.CustomerID;
